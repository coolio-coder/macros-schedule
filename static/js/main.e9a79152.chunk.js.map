{"version":3,"sources":["components/Header.jsx","components/Macro.jsx","components/MacroSchedule.jsx","components/Dropdown.jsx","components/AddInfo.jsx","App.jsx","index.jsx"],"names":["Header","title","style","headingStyle","className","defaultProps","color","textAlign","marginTop","Macro","macroInfo","onToggle","onDoubleClick","day","cursor","training","calories","protein","carbs","fat","Macros","macroSchedule","map","Dropdown1","DropdownName","firstoption","secondoption","thirdoption","getDropdown","useState","btnTitle","setBtnTitle","setDropdownSelection","e","target","innerText","DropdownButton","id","Dropdown","Item","onClick","AddInfo","onAdd","weight","setWeight","frequency","setFrequency","weightIntensity","setWeightIntensity","cardioIntensity","setCardioIntensity","fitnessGoals","setFitnessGoals","getDropdownSelection","console","log","onSubmit","preventDefault","alert","type","placeholder","value","onChange","App","cardio","setSchedule","Math","floor","random","newMacro","setMSchedule","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9a79152.chunk.js","sourcesContent":["// import PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Header = ({ title }) => {\n    const onClick = (e) => {\n        console.log(e)\n    }\n\n    return (\n        <div style={ headingStyle } className=\"jumbotron jumbotron-fluid App\">\n            <h1 className=\"display-2\">Welcome to your { title }</h1>\n        </div>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Macro Schedule'\n}\n\n// Header.PropTypes = {\n//     title: PropTypes.string\n// }\n\nconst headingStyle = {\n    color: 'gray',\n    textAlign: 'center',\n    marginTop: '20px',\n}\n\nexport default Header\n","import { FaTimes } from \"react-icons/fa\";\n\nconst Macro = ({ macroInfo , onToggle}) => {\n    return (\n        <div className='task' onDoubleClick={() => onToggle(macroInfo.day)}>\n            <h3>{macroInfo.day} <FaTimes style={{ cursor: 'pointer'}} /></h3>\n            <h5>Today, you will have {macroInfo.training ? \"to work out. Good Luck!\" : \"to take a rest day. Enjoy!\"} </h5>\n            <br></br>\n            <p>Calories: {macroInfo.calories}</p> \n            <p>Protein: {macroInfo.protein}</p> \n            <p>Carbohydrate: {macroInfo.carbs}</p> \n            <p>Fat: {macroInfo.fat}</p> \n        </div>\n    )\n}\n\nexport default Macro\n","import Macro from \"./Macro\";\n\nconst Macros = ({ macroSchedule, onToggle }) => {\n  return (\n    <>\n      {macroSchedule.map((macroInfo) => (\n        <Macro key={macroInfo.day} macroInfo={macroInfo} onToggle={onToggle} />\n      ))}\n    </>\n  );\n};\n\nexport default Macros;\n","import React, { useState } from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\n\nconst Dropdown1 = ({DropdownName, firstoption, secondoption, thirdoption , getDropdown}) => {\n    const [btnTitle, setBtnTitle] = useState(DropdownName)\n\n    const setDropdownSelection = (e) => {\n      getDropdown(e.target.innerText);\n    }\n\n    return (\n    <DropdownButton id=\"dropdown-basic-button\" title={btnTitle}>\n      <Dropdown.Item onClick={(e) => \n        {\n        setDropdownSelection(e);\n        setBtnTitle(firstoption)\n        }\n        }>\n        {firstoption}\n      </Dropdown.Item>\n      <Dropdown.Item onClick={(e) => \n        {\n        setDropdownSelection(e);\n        setBtnTitle(secondoption)\n        }\n        }>\n        {secondoption}\n      </Dropdown.Item>\n      <Dropdown.Item onClick={(e) => \n        {\n        setDropdownSelection(e);\n        setBtnTitle(thirdoption)\n        }\n        }>\n        {thirdoption}\n      </Dropdown.Item>\n    </DropdownButton>\n    )\n}\n\nexport default Dropdown1;\n","import { useState } from \"react\";\nimport Dropdowns from \"./Dropdown\";\nimport Checkboxes from \"./Checkboxes\";\n\n\nconst AddInfo = ({onAdd}) => {\n  const [weight, setWeight] = useState(\"\");\n  const [frequency, setFrequency] = useState(\"\");\n  const [weightIntensity, setWeightIntensity] = useState(\"Medium Intensity\");\n  const [cardioIntensity, setCardioIntensity] = useState(\"Medium Intensity\");\n  const [fitnessGoals, setFitnessGoals] = useState(\"Lose Weight\");\n\n  const onSubmit = (e) => {\n      //Doesn't acutally submit to the page\n      e.preventDefault();\n\n      if(!weight) {\n          alert('Please enter your weight')\n          return\n      }\n\n      //Adds info to the state via submitInfo function in App.js\n      onAdd({weight, frequency, weightIntensity, cardioIntensity, fitnessGoals})\n\n      //Resets the values in the home screen\n      setWeight('')\n      setFrequency('')\n      setWeightIntensity('')\n      setCardioIntensity('')\n      setFitnessGoals('')\n  }\n\n  //Brings the drop down item to the submisson page\n  const getDropdownSelection = (e) => {\n    console.log(e);\n  }\n\n  const sayHello = () => {\n    console.log('hi');\n  }\n\n  return (\n    <form className=\"add-form\" onSubmit={onSubmit}>\n      <div className=\"form-control\">\n        <label>Your weight in KG</label>\n        <input\n          type=\"text\"\n          placeholder=\"Enter your Weight\"\n          value={weight}\n          onChange={(e) => setWeight(e.target.value)}\n        />\n      </div>\n\n      <div className=\"form-control\">\n        <label>What is your work out frequency</label>\n        <input\n          type=\"text\"\n          placeholder=\"How often do you workout\"\n          value={frequency}\n          onChange={(e) => setFrequency(e.target.value)}\n        />\n        {/* <Checkboxes /> */}\n\n      </div>\n      <div className=\"form-control\">\n        <label>How intense are your free weight/body weight workouts?</label>\n        <Dropdowns DropdownName={\"Weights Intensity Level\"} firstoption={\"Low Intensity\"} secondoption={\"Medium Intensity\"} thirdoption={\"High Intensity\"} getDropdown={getDropdownSelection } onClick={() => console.log('hi')}/>   \n      </div>\n      <div className=\"form-control\">\n        <label>How intense are your cardio workouts?</label>\n        <Dropdowns DropdownName={\"Cardio Intensity Level\"} firstoption={\"Low Intensity\"} secondoption={\"Medium Intensity\"} thirdoption={\"High Intensity\"} getDropdown={getDropdownSelection}/>\n      </div>\n      <div className=\"form-control\">\n        <label>What do you want to gain?</label>\n        <Dropdowns DropdownName={\"Your fitness goals\"} firstoption={\"Tone Muscles\"} secondoption={\"Lose Weight\"} thirdoption={\"Gain Muscles\"} getDropdown={getDropdownSelection}/>\n      </div>\n\n\n      <input type='submit' value='Submit your Info' className='btn btn-block btn-primary' />\n    </form>\n  );\n};\n\nAddInfo.defaultProps = {\n  cardioIntensity: 'Medium Intensity',\n  weightIntensity: 'Medium Intensity',\n}\n\nexport default AddInfo;\n\n\n","import Header from \"./components/Header\";\nimport Macros from \"./components/MacroSchedule\";\nimport AddInfo from \"./components/AddInfo\";\nimport { useState } from \"react\";\n\n// Actual calculations (https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6566799/)\n\n//Maintain muscle mass = 0.8g/kg\n//Ideal protein intake = 1.4 - 2.0 g/kg\n    //low tone = 1.0 g/kg\n    //low lose = 1.2 g/bg\n    //low gain = 1.4 g/bg\n    //moderate tone = 1.4 g/kg\n    //moderate lose = 1.6 g/kg\n    //moderate gain = 1.8 g/kg\n    //high tone = 1.6 g/kg\n    //high lose = 1.8 g/kg\n    //high gain = 2.0 g/kg\n\nconst proteinCalculation = {\n  cardioIntensity: {\n    \"Low Intensity\": {\n      \"Tone Muscles\": 1,\n      \"Lose Weight\": 1.2,\n      \"Gain Muscles\": 1.4,\n    },\n    \"Medium Intensity\": {\n      \"Tone Muscles\": 1.4,\n      \"Lose Weight\": 1.6,\n      \"Gain Muscles\": 1.8,\n    },\n    \"High Intensity\": {\n      \"Tone Muscles\": 1.6,\n      \"Lose Weight\": 1.8,\n      \"Gain Muscles\": 2.0,\n    }\n  }\n};\n\n\nfunction App() {\n  const [macroSchedule, setSchedule] = useState([\n    {\n      day: \"Sunday\",\n      calories: 2100,\n      protein: 180,\n      carbs: 60,\n      fat: 60,\n      training: true,\n      cardio: \"high\",\n      weight: \"medium\",\n    },\n    {\n      day: \"Monday\",\n      calories: 2300,\n      protein: 180,\n      carbs: 60,\n      fat: 60,\n      training: true,\n      cardio: \"medium\",\n      weight: \"low\",\n    },\n    {\n      day: \"Tuesday\",\n      calories: 2100,\n      protein: 180,\n      carbs: 60,\n      fat: 60,\n      training: false,\n      cardio: \"low\",\n      weight: \"medium\",\n    },\n    {\n      day: \"Wednesday\",\n      calories: 2100,\n      protein: 180,\n      carbs: 60,\n      fat: 60,\n      training: true,\n      cardio: \"medium\",\n      weight: \"medium\",\n    },\n    {\n      day: \"Thursday\",\n      calories: 2100,\n      protein: 180,\n      carbs: 60,\n      fat: 60,\n      training: false,\n      cardio: \"high\",\n      weight: \"medium\",\n    },\n    {\n      day: \"Friday\",\n      calories: 2100,\n      protein: 180,\n      carbs: 60,\n      fat: 60,\n      training: true,\n      cardio: \"low\",\n      weight: \"high\",\n    },\n    {\n      day: \"Saturday\",\n      calories: 2100,\n      protein: 180,\n      carbs: 60,\n      fat: 60,\n      training: true,\n      cardio: \"medium\",\n      weight: \"medium\",\n    },\n  ]);\n\n  const toggleTraining = (day) => {\n  //   console.log(day);\n  //   // setSchedule(\n  //   //   macroSchedule.map((macroInfo) =>\n  //   //     macroInfo.day === day ?  console.log('Hi')  : console.log('bye')\n  //   //   )\n  //   // );\n  };\n\n  const addTask = (day) => {\n    const id = Math.floor(Math.random() * 100000) + 1;\n    const newMacro = {id, ...day}\n    console.log(newMacro);\n    // setSchedule(...day, newMacro)\n    // console.log(day)\n\n\n    // let proteinFactor = proteinCalculation.cardioIntensity[day.cardioIntensity][day.fitnessGoals];\n\n    // console.log(`Your weight is ${day.weight} and you train ${day.frequency} per week. Your fitness goals is to ${day.fitnessGoals}, which requires you to work out ${day.frequency} per week. In order to meet your goals, you'll need to take ${proteinFactor * day.weight} grams of protein during your work out days.`)\n  }\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <AddInfo onAdd={addTask}/>\n      <Macros\n        macroSchedule={macroSchedule}\n        setMSchedule={setSchedule}\n        onToggle={toggleTraining}\n      />\n    </div>\n    //  <button type='button' className='btn btn-primary'>Primary</button>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}